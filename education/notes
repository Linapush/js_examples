ЯП, выполняющийся на стороне пользователя с помощью браузера
Позволяет управлять элементами веб-страницы

заставлять их менять свои свойства и расположение, двигаться, реагировать на события, такие как перемещение мыши или нажатия клавиатуры, а также создавать множество других интересных эффектов.
JavaScript имеет синтаксис схожий с языком Си, однако имеет ряд существенных отличий:

 - Возможность работы с объектами, в том числе определение типа и структуры объекта во время выполнения программы.

 - Возможность передавать и возвращать функции как параметры, а также присваивать их переменной.

 - Наличие механизма автоматического приведения типов.

 - Автоматическая сборка мусора.

Для полноценного использования JavaScript  вам необходимо пройти несколько шагов:

1. Изучение базового синтаксиса JavaScript - типы данных, переменные, операции, ветвление и циклы.

2. Освоение понятий функций, объектов и массивов, используемых в JavaScript.

3. Изучение DOM и управление им с помощью JavaScript. DOM (Document Object Model) - это объектная модель документа, благодаря которой можно работать с тегами HTML-документа как с деревом объектов, каждый из которых имеет свой уникальный адрес. Обращаясь по этому адресу с помощью JavaScript, можно получить доступ к тому или иному HTML-объекту и управлять его свойствами - изменять размер, цвет и т.п.

4. Изучение BOM (Browser Object Model) - структуры, имеющей схожее строение с DOM и включающее в себя элементы браузера - окна браузера, статусная строка, история просмотра и другие. Ими также можно управлять с помощью JavaScript.

5. После освоения уже чуть более сложных скриптов можно переходить к изучению и использованию основных JavaScript-библиотек, упрощающих взаимодействие JavaScript и HTML, таких как JQuery, Prototype.

DOM - это модель, структурирующая HTML-тэги и позволяющая обращаться к ним по уникальному адресу
BOM - это модель, структурирующая элементы браузера и позволяющая обращаться к ним по уникальному адресу
JQuery - Библиотека JavaScript, упрощающая работу по взаимодействию JavaScript и HTML
JavaScript - обладает системой автоматической сборки мусора
Язык Си - не обладает системой автоматической сборки мусора

При размещении кода внутри HTML-файла код JavaScript обрамляется тэгом <script>

Выглядит это примерно так:
<script>
   ... JavaScript-код ...
</script>
Давайте посмотрим как выглядит код такой страницы:
<html>
 <head>
  <title>Страница с примером кода JavaScript</title>
  <script>
   alert("Hello World!");
  </script>
 </head>
 <body>
  Это текст основной страницы
 </body>
</html>
При открытии данной страницы появится окошко с надписью "Hello World!" и кнопкой "OK". После нажатия на кнопку "OK" продолжится выполнение страницы и на ней появится надпись "Это текст основной страницы"

Теперь рассмотрим пример размещения JavaScript-кода в отдельном файле.
Мы создадим файл с названием myscript.js и поместим в него наш код:  
alert("Hello World!");
А вызов кода из тела основного HTML-файла теперь будет выглядеть вот так:
<html>
  <head>
    <title>Страница с примером кода JavaScript</title> 
    <script src="myscript.js"></script>
  </head> 
  <body>
    Это текст основной страницы
  </body> 
</html>
Плюсы такого использования очевидны: при любом объеме JavaScript-кода вызов обеспечивается одной небольшой строчкой.

Основной единицей кода является инструкция.
Инструкция JavaScript - это фактически команда браузеру, указание, что необходимо выполнить.
Инструкцию желательно заканчивать точкой с запятой ";"

Код JavaScript - это последовательность инструкций JavaScript. Инструкции выполняются браузером в том порядке, в котором они написаны.
Блоки JavaScript - это способ сгруппировать инструкции вместе. Блок начинается открывающейся фигурной скобкой "{" и заканчивается закрывающейся "}".


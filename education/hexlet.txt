Основной единицей кода чвляется инструкция

Инструкция - это команда браузеру, указание, что необходимо выполнить

Инструкцию желательно заканчивать с запятой ";"

Код JavaScript - это послежовательность инструкций JavaScript
Инструкции выполняются браузером в том порядке, в котором они написаны

Блоки JS - способ сгруппировать инструкции вместе
Блок начинается открывающейся фигурной скобкой "{" и заканчивается закрывающейся "}"
    Блоки используются для выполнения комманд в функции или внури условной конструкции

commands
make test - проверка
babel-node ex.js

В любом языке программирования существуют специальные инструменты, так называемые линтеры, задачей которых является проверка кода на соответствие стандартам. В js это eslint.



Ещё есть символ % — остаток от деления. Он вычисляет остаток от деления первого операнда на второй. Например, 11%5 это 1, а 10%2 это 0.

При делении на 2:
остаток 0 - число четное
остаток 1 - число нечетное

Есть Infinity и -Infinity
Infinity является свойством глобального объекта . Другими словами, это переменная в глобальной области видимости.

Когда вычисление оказывается не числом, JavaScript использует NaN, который означает "не число" (Not a Number). Например: 0/"word" это NaN. 
Если в вычислении присутствует NaN, то результатом всегда будет NaN. Например: 120 + 5 / NaN это NaN

К операциям, приводящим к появлению нечисла в качестве результата, относятся:
все нетривиальные математические операции, содержащие нечисло в качестве одного из операндов;
деление нуля на ноль;
деление бесконечности на бесконечность;
умножение нуля на бесконечность;
сложение бесконечности с бесконечностью противоположного знака;
вычисление квадратного корня отрицательного числа[прим. 1];
логарифмирование отрицательного числа[прим. 1];

* Ключевое слово this ссылается на специальное свойство контекста выполнения.

* Литералы
Базовые нулевые, логические, числовые и строковые литералы.

* Оператор void вычисляет выражение и отбрасывает его возвращаемое значение.



Возможно у вас возник вопрос: "почему константы, а не переменные?". Константы гораздо проще, чем переменные. Они всегда однозначно определены и никогда не меняются. В школе и в ВУЗе, в математике и физике мы имели дело только с константами.

В будущих уроках вы увидите, что единственное место, где требуются переменные — это циклы. Практически во всех других случаях они не нужны, и их присутствие усложняет код (мы объясним это позже в курсе).

// возведение в степеь
2 ** 3
Math.pow(2, 3)

Функции подобны специальным машинам, которые мы создаём, чтобы они выполняли что-нибудь для нас.
Функции можно представить в виде ящиков, которые принимают что-то и что-то выплёвывают.
Функции могут принимать аргументы.
И могут возвращать что-то.

















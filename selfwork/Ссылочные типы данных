Ссылочные типы данных

Объекты и массивы

Ссылочные типы — это объекты, включая Object, Array и Function. Ввиду того что эти типы могут содержать очень большие объемы весьма разнородных данных, переменная, содержащая ссылочный тип, фактически его значения не содержит. Она содержит ссылку на место в памяти, где размещаются реальные данные.

var х = [10, 9, 8] ;
var у = х;
х[0] = 2;
alert("Значением первого элемента у является: " + у[0]);
Результат может показаться неожиданным: Значением первого элемента у является: 2

Массивы являются ссылочными типами, поэтому вторая строка 
!!!
копирует ссылку на данные х в переменную у. 
!!!
Теперь и х, и у ссылаются на одни и те же данные, так что изменение значения этих данных с помощью переменной естественно оказывается видимым как для х, так и для у.

В случае ссылочных типов переменные содержат ссылки на данные, а не сами данные. Поэтому при использовании операции проверки равенства происходит сравнение ссылок, а не объектов, на которые эти ссылки указывают. Другими словами, операция == обеспечивает проверку не того, что две переменные ссылаются на эквивалентные объекты, а того, что переменные ссылаются на один и тот же объект. Для иллюстрации рассмотрим

var str1 = new String("abc");
var str2 = new String("abc");
alert(strl == str2);

Результат может показаться неожиданным: false Даже если объекты, на которые ссылаются str1 и str2, эквивалентны, это не один и тот же объект, поэтому результатом сравнения является значение false (ЛОЖЬ).

Здесь возникает следующий вопрос: если нельзя проверить равенство двух объектов с помощью == для их ссылок, то как это сделать? Имеются два способа: с помощью преобразования объектов к примитивному типу или с помощью специально созданной для этого функции.



https://learn.javascript.ru/map-set

Map и Set
Сейчас мы знаем о следующих сложных структурах данных:

Объекты для хранения именованных коллекций.
Массивы для хранения упорядоченных коллекций.
Но этого не всегда достаточно для решения повседневных задач. Поэтому также существуют Map и Set.

p.s на следующих занятиях начнем проходить об взаимодействии с объектами, массивами (ссылочными типами данных)


